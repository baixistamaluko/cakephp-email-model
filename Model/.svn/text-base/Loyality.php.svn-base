<?php
App::uses('AppModel', 'Model');
/**
 * Loyality Model
 *
 * @property Account $Account
 * @property FriendAccount $FriendAccount
 */
class Loyality extends AppModel {
	/**
	 * Validation rules
	 *
	 * @var array
	 */
	public $validate = array(
		'account_id' => array(
			'numeric' => array(
				'rule' => array('numeric'),
	//'message' => 'Your custom message here',
	//'allowEmpty' => false,
	//'required' => false,
	//'last' => false, // Stop validation after this rule
	//'on' => 'create', // Limit validation to 'create' or 'update' operations
	),
	),
		'friend_mobile' => array(
			'notempty' => array(
				'rule' => array('notempty'),
	//'message' => 'Your custom message here',
	//'allowEmpty' => false,
	//'required' => false,
	//'last' => false, // Stop validation after this rule
	//'on' => 'create', // Limit validation to 'create' or 'update' operations
	),
	),
		'processed' => array(
			'boolean' => array(
				'rule' => array('boolean'),
	//'message' => 'Your custom message here',
	//'allowEmpty' => false,
	//'required' => false,
	//'last' => false, // Stop validation after this rule
	//'on' => 'create', // Limit validation to 'create' or 'update' operations
	),
	),
	);

	function SignupByFriend($account_id,$friend_mobile){
		$data = array();
		$data['Loyality']['account_id'] = $account_id;
		$data['Loyality']['friend_mobile'] = $friend_mobile;
		$data['Loyality']['points'] = Configure::read('__lp.SignupByFriend.points');
		$this->create();
		$this->save($data);
	}
	//The Associations below have been created with all possible keys, those that are not needed can be removed

	/**
	 * belongsTo associations
	 *
	 * @var array
	 */
	public $belongsTo = array(
		'Account' => array(
			'className' => 'Account',
			'foreignKey' => 'account_id',
			'conditions' => '',
			'fields' => '',
			'order' => ''
	),
		'FriendAccount' => array(
			'className' => 'FriendAccount',
			'foreignKey' => 'friend_account_id',
			'conditions' => '',
			'fields' => '',
			'order' => ''
	)
	);
}
